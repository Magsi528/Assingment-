#include <iostream>
using namespace std;

// Input Arrays in this Function
void scanArr(int arr[], int size) {
    cout << "Enter " << size << " elements:" << endl;
    for (int i = 0; i < size; i++) {
        cout << "Element " << (i + 1) << ": ";
        cin >> arr[i];
    }
}

// Function for Displaying the Arrays
void displayArr(const int arr[], int size) {
    cout << "The Array elements are: ";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

// Function for Clearing the Arrays this will set them to 0
void clearArr(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        arr[i] = 0;
    }
}

// This Function finds the max arrays
int findMax(const int arr[], int size) {
    int max = arr[0];
    for (int i = 1; i < size; i++) {
        if (arr[i] > max) {
            max = arr[i];
        }
    }
    return max;
}

// this functions finds min arrays
int findMin(const int arr[], int size) {
    int min = arr[0];
    for (int i = 1; i < size; i++) {
        if (arr[i] < min) {
            min = arr[i];
        }
    }
    return min;
}

// Function to find the sum
int calculateSum(const int arr[], int size) {
    int sum = 0;
    for (int i = 0; i < size; i++) {
        sum += arr[i];
    }
    return sum;
}

int main() {
    const int SIZE = 5;
    int myArray[SIZE];

    // calling scan arr func
    scanArr(myArray, SIZE);

    // Step 2: displaying the array
    displayArr(myArray, SIZE);

    // Step 3: finding and displaying the maximum array
    int maxElement = findMax(myArray, SIZE);
    cout << "Maximum element: " << maxElement << endl;

    // Step 4: finding and displaying the minimum array
    int minElement = findMin(myArray, SIZE);
    cout << "Minimum element: " << minElement << endl;

    // Step 5: for finding the sum and displaying them
    int sum = calculateSum(myArray, SIZE);
    cout << "Sum of elements: " << sum << endl;

    // Step 6:  this wll clear the array
    clearArr(myArray, SIZE);

    // Step 7: this will displa the cleared array
    displayArr(myArray, SIZE);

    return 0;
}
